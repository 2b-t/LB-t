# Makefile for LB-t without VTK and nlohmann-json libraries
# Tobit Flatscher - github.com/2b-t (2022)

# Compiler settings: ICC or GCC (alternatively: 'export COMPILER=ICC' or 'make COMPILER=ICC run' in console)
COMPILER = GCC

# Define sub-directories to be included in compilation
SRCDIR   = .
BUILDDIR = ../build
OBJDIR   = $(BUILDDIR)/obj
BINDIR   = $(BUILDDIR)/bin

SOURCES  = $(SRCDIR)/minimal_main.cpp #$(wildcard $(SRCDIR)/*/*.cpp)
INCLUDES = #$(wildcard $(SRCDIR)/*/*.hpp) $(wildcard $(SRCDIR)/*/*/*.hpp)
OBJECTS  = $(SOURCES:$(SRCDIR)/%.cpp=$(OBJDIR)/%.o)
PROGRAM	 = main.$(COMPILER)

# Compiler flags
WARNINGS  = -Wall -pedantic -Wextra -Weffc++ -Woverloaded-virtual -Wfloat-equal -Wshadow -Wredundant-decls -Winline -fmax-errors=1
CXXFLAGS += -std=c++17 -O3 -flto -fwhole-program -funroll-all-loops -finline-functions -mavx2 -march=native -fno-exceptions -DNDEBUG
CXXFLAGS += -funsafe-math-optimizations -fassociative-math -freciprocal-math -obey-inline -fstrict-aliasing -fearly-inlining
LDFLAGS  += -O3 -flto

# Compiler settings for specific compiler
ifeq ($(COMPILER),ICC)
	# Intel compiler ICC
	CXX       = icpc
	LD        = icpc
	CXXFLAGS += -fopenmp
	LDFLAGS  += -qopenmp
	COMPILER  = ICC
else
	# Gnu compiler GCC
	CXX       = g++
	LD        = g++
	CXXFLAGS += -fopenmp
	LDFLAGS  += -lgomp
	COMPILER  = GCC
endif

## Make commands
# Default rule 'make'
default: $(BINDIR)/$(PROGRAM)

$(BINDIR)/$(PROGRAM): $(OBJECTS)
	@mkdir -p $(@D)
	$(LD)  $(OBJECTS)  $(LDFLAGS) -o $@
	@echo "Linking complete!"

$(OBJECTS): $(OBJDIR)/%.o: $(SRCDIR)/%.cpp
	@mkdir -p $(@D)
	@$(CXX) $(CXXFLAGS) -c $< -o $@
	@echo "Compiled "$<" successfully!"

# Suffix rule
.cpp.o:
	$(CXX) -c $(CXXFLAGS) $<

# Remove executables generated by 'make run' rule
clean:
	@echo "Deleting compiled files '$(BINDIR)/$(PROGRAM)' and '$(OBJECTS)'..."
	@rm -f $(BINDIR)/$(PROGRAM) $(OBJECTS)

# Remove directories and contents generated by 'make run' rule
purge:
	@echo "Deleting directory build directory '$(BUILDDIR)'..."
	@rm -rf $(BUILDDIR)

# Run executable
run: clean $(BINDIR)/$(PROGRAM)
	@echo "Running executable '$(BINDIR)/$(PROGRAM)'..."
	./$(BINDIR)/$(PROGRAM)

# Benchmark performance
benchmark: clean $(BINDIR)/$(PROGRAM)
	@echo "Starting benchmark..."
	./$(BINDIR)/$(PROGRAM) --b

# Generate Doxygen documentation
doc:
	@echo "Generating Doxygen documentation..."
	doxygen Doxyfile

# Show info about compiler
info:
	@echo "Compiler version: "
	$(CXX) --version
	@echo "Compiler flags: "
	@echo $(CXXFLAGS)
	@echo "Linker flags: "
	@echo $(LDFLAGS)
